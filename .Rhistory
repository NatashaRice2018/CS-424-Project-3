shiny::runApp('cs 424/evlWeatherForR')
install.packages("box")
install.packages("date")
shiny::runApp('cs 424/evlWeatherForR')
dir()
getwd()
setwd(CS_424)
setwd(CS424)
setwd(CSb424)
setwd(CS 424)
setwd("CS 424"")
df
quit
plot(cars)
install.packages("tidyverse")
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color  = class))
ggplot(data = mpg) +
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 1)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, rows = 7)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 7)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, labeller = new_names)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, ~)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, labeller = new_names)
new_names <- as_labeller(c(`4` = "name0", `5` = "other_name", `6` = "name1", `8` = "name2"))
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, labeller = new_names)
shiny::runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
View(data2)
View(data2)
rm(ggolot2)
install.packages("ggplot2")
install.packages(sp)
install.packages("sp")
shiny::runApp('cs 424/CS-424---Project-2')
library(shiny)
library(shinydashboard)
library(ggplot2)
library(lubridate)
library(DT)
library(jpeg)
library(grid)
library(leaflet)
library(dplyr)
#Libaries needed to read in data faster.
library(data.table)
library(fasttime)
library(ggridges)
install.packages("shineydashboard")
runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
leaflet() %>% addTiles() %>%
addRectangles(
lng1=-118.456554, lat1=34.078039,
lng2=-118.436383, lat2=34.062717,
fillColor = "transparent"
)
library(leaflet)
leaflet() %>% addTiles() %>%
addRectangles(
lng1=-118.456554, lat1=34.078039,
lng2=-118.436383, lat2=34.062717,
fillColor = "transparent"
)
leaflet() %>% addTiles() %>%
addPolylines(
lng1=-118.456554, lat1=34.078039,
lng2=-118.436383, lat2=34.062717,
fillColor = "transparent"
)
allData <- readRDS("tornadoes.rds")
setwd("~/cs 424/CS-424-Project-3")
allData <- readRDS("tornadoes.rds")
temp <- allData %>% filter(st == "IL", sg != "-9")
library(shiny)
library(shinydashboard)
library(ggplot2)
library(lubridate)
library(DT)
library(jpeg)
library(grid)
library(leaflet)
library(dplyr)
library(plotly)
"allows us to add missing values"
library(tidyverse)
"Allows us to piviot tables if needed"
library(reshape)
"libary that lets us find distances between two LAT, Long"
library(geosphere)
library(measurements)
temp <- allData %>% filter(st == "IL", sg != "-9")
map3 = leaflet(temp) %>% addTiles()
for(i in 1:nrow(temp)){
map3 <- map3 %>% addPolylines(map3, lat = as.numeric(temp[i, c("slat", "elat")]),
lng = as.numeric(temp[i, c("slon", "elon")]))
}
allData <- readRDS("tornadoes.rds")
map3 = leaflet(temp) %>% addTiles()
for(i in 1:nrow(temp)){
print(i)
map3 <- map3 %>% addPolylines(map3, lat = as.numeric(temp[i, c("slat", "elat")]),
lng = as.numeric(temp[i, c("slon", "elon")]))
})
allData <- readRDS("tornadoes.rds")
map3 = leaflet(temp) %>% addTiles()
for(i in 1:nrow(temp)){
print(i)
map3 <- map3 %>% addPolylines(map3, lat = as.numeric(temp[i, c("slat", "elat")]),
lng = as.numeric(temp[i, c("slon", "elon")]))
}
for(i in 1:nrow(temp)){
print(i)
}
allData <- readRDS("tornadoes.rds")
map3 = leaflet(temp) %>% addTiles()
for(i in 1:nrow(temp)){
print(i)
}
for(i in 1:nrow(temp)){
print(i)
}
for(i in 1:nrow(temp)){
print(i)
}
allData <- readRDS("tornadoes.rds")
map3 = leaflet(temp) %>% addTiles()
for(i in 1:nrow(temp)){
print(i)
map3 <- addPolylines(map3, lat = as.numeric(temp[i, c("slat", "elat")]),
lng = as.numeric(temp[i, c("slon", "elon")]))
}
map3
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elong, ~elat, popup = ~Observation)
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elon, ~elat, popup = ~Observation)
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elon, ~elat)
temp <- allData %>% filter(st == "IL", sg != "-9")
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elong, ~elat, popup = ~elong)
temp <- allData %>% filter(st == "IL", sg != "-9")
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elong, ~elat, popup = ~elon)
temp <- allData %>% filter(st == "IL", sg != "-9")
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elon, ~elat, popup = ~elon)
temp <- allData %>% filter(st == "IL", sg != "-9")
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elon, ~elat, popup = ~date)
View(temp)
View(temp)
temp <- allData %>% filter(st == "IL", elat != "0.0", slat != "0.0", slon != "0.0", elon != "0.0")
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elon, ~elat, popup = ~date)
temp <- allData %>% filter(st == "IL", elat != 0.0, slat != 0.0, slon != 0.0, elon != 0.0)
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elon, ~elat, popup = ~date)
temp <- allData %>% filter(st == "IL", elat != 0.0, slat != 0.0, slon != 0.0, elon != 0.0)
map3 = leaflet(temp) %>% addTiles()
for(i in 1:nrow(temp)){
print(i)
map3 <- addPolylines(map3, lat = as.numeric(temp[i, c("slat", "elat")]),
lng = as.numeric(temp[i, c("slon", "elon")]))
}
map3
temp <- allData %>% filter(st == "IL", elat != 0.0, slat != 0.0, slon != 0.0, elon != 0.0)
map3 = leaflet(temp) %>% addTiles()
map3 %>% addMarkers(~elon, ~elat, popup = ~date)
for(i in 1:nrow(temp)){
print(i)
map3 <- addPolylines(map3, lat = as.numeric(temp[i, c("slat", "elat")]),
lng = as.numeric(temp[i, c("slon", "elon")]))
}
View(temp)
View(temp)
runApp()
runApp()
