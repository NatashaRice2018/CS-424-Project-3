shiny::runApp('cs 424/evlWeatherForR')
install.packages("box")
install.packages("date")
shiny::runApp('cs 424/evlWeatherForR')
dir()
getwd()
setwd(CS_424)
setwd(CS424)
setwd(CSb424)
setwd(CS 424)
setwd("CS 424"")
df
quit
plot(cars)
install.packages("tidyverse")
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color  = class))
ggplot(data = mpg) +
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 1)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, rows = 7)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 7)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, labeller = new_names)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, ~)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl)
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, labeller = new_names)
new_names <- as_labeller(c(`4` = "name0", `5` = "other_name", `6` = "name1", `8` = "name2"))
ggplot(mpg, aes(displ, cty)) + facet_wrap(~ cyl, labeller = new_names)
shiny::runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
View(data2)
View(data2)
rm(ggolot2)
install.packages("ggplot2")
install.packages(sp)
install.packages("sp")
shiny::runApp('cs 424/CS-424---Project-2')
library(shiny)
library(shinydashboard)
library(ggplot2)
library(lubridate)
library(DT)
library(jpeg)
library(grid)
library(leaflet)
library(dplyr)
#Libaries needed to read in data faster.
library(data.table)
library(fasttime)
library(ggridges)
install.packages("shineydashboard")
runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
shiny::runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
runApp('cs 424/CS-424---Project-2')
setwd("~/cs 424/CS-424-Project-3")
require(datasets)
allData <- read.table("1950-2016_all_tornadoes.csv")
save(list=allData, file="1950-2016_all_tornadoes.rdata")
save(list=allData, file="/1950-2016_all_tornadoes.rdata")
allData <- read.list("1950-2016_all_tornadoes.csv")
allData <- read.table("1950-2016_all_tornadoes.csv")
alldata <- as.list(allData)
save(list=allData, file="/1950-2016_all_tornadoes.rdata")
allData <- read.table("1950-2016_all_tornadoes.csv")
alldata <- as.list(allData)
symbols <- colnames(alldata)
allData <- read.table("1950-2016_all_tornadoes.csv")
saveRDS(allData, file = "tornadoes.rds")
my_data <- readRDS("tornadoes.rds")
my_data <- readRDS("tornadoes.rds")
my_data <- readRDS("tornadoes.rds")
View(my_data)
View(my_data)
allData <- read.table("1950-2016_all_tornadoes.csv")
allData <- read.table("1950-2016_all_tornadoes.csv", header = true)
allData <- read.table("1950-2016_all_tornadoes.csv", header = TRUE)
allData <- read.table("1950-2016_all_tornadoes.csv", header = TRUE, sep = '\t')
allData <- read.table("1950-2016_all_tornadoes.csv", header = TRUE, sep = '\t')
deathLoc<- read.table(file = "=1950-2016_all_tornadoes.csv", header = FALSE,sep = ',')
deathLoc<- read.table(file = "1950-2016_all_tornadoes.csv", header = FALSE,sep = ',')
allData<- read.table(file = "=1950-2016_all_tornadoes.csv", header = true,sep = ',')
allData<- read.table(file = "1950-2016_all_tornadoes.csv", header = true,sep = ',')
allData<- read.table(file = "1950-2016_all_tornadoes.csv", header = TRUE,sep = ',')
saveRDS(allData, file = "tornadoes.rds")
my_data <- readRDS("tornadoes.rds")
airport = list.files(pattern = "*.cleaned.csv")
setwd("~/cs 424/CS-424---Project-2")
airport = list.files(pattern = "*.cleaned.csv")
ColNames<- c("FL_DATE","AIRLINE_ID","CARRIER","ORIGIN_AIRPORT_ID","ORIGIN","ORIGIN_CITY_NAME","ORIGIN_STATE_NM","DEST_AIRPORT_ID","DEST_CITY_NAME","DEST_STATE_NM","DEP_TIME","DEP_DELAY","DEP_DELAY_NEW","ARR_TIME","ARR_DELAY","ARR_DELAY_NEW","CANCELLED","CANCELLATION_CODE","DIVERTED","ACTUAL_ELAPSED_TIME","FLIGHTS","DISTANCE","CARRIER_DELAY","WEATHER_DELAY","NAS_DELAY","SECURITY_DELAY","LATE_AIRCRAFT_DELAY","NULL")
allData <- lapply(airport, read.table , header = FALSE,sep='\t')
allData2 <- do.call(rbind, allData)
names(allData2)<-ColNames
ColNames<- c("FL_DATE","AIRLINE_ID","CARRIER","ORIGIN_AIRPORT_ID","ORIGIN","ORIGIN_CITY_NAME","ORIGIN_STATE_NM","DEST_AIRPORT_ID","DEST_CITY_NAME","DEST_STATE_NM","DEP_TIME","DEP_DELAY","DEP_DELAY_NEW","ARR_TIME","ARR_DELAY","ARR_DELAY_NEW","CANCELLED","CANCELLATION_CODE","DIVERTED","ACTUAL_ELAPSED_TIME","FLIGHTS","DISTANCE","CARRIER_DELAY","WEATHER_DELAY","NAS_DELAY","SECURITY_DELAY","LATE_AIRCRAFT_DELAY","NULL")
airport = list.files(pattern = "*.cleaned.csv")
allData <- lapply(airport, read.table , header = FALSE,sep='\t')
allData2 <- do.call(rbind, allData)
names(allData2)<-ColNames
setwd("~/cs 424/CS-424-Project-3")
allData<- read.table(file = "1950-2016_all_tornadoes.csv", header = TRUE,sep = ',')
allData2$date_time <- as.POSIXct(paste(allData2date, allData$time), format = "%Y-%m-%d %H:%M:%S" )
allData2$date_time <- as.POSIXct(paste(allData$date, allData$time), format = "%Y-%m-%d %H:%M:%S" )
allData$date_time <- as.POSIXct(paste(allData$date, allData$time), format = "%Y-%m-%d %H:%M:%S" )
weekday(allData$date)
weekdays(allData$date)
weekdays(allData$date_time)
lubridate::hour(allData$date_time)
month.name(allData$mo)
month.abb(allData$mo)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(lubridate)
library(DT)
library(jpeg)
library(grid)
library(leaflet)
library(dplyr)
library(plotly)
month.abb(allData$mo)
month.abb[allData$mo]
month.name[allData$mo]
require(datasets)
"read in the data"
allData<- read.table(file = "1950-2016_all_tornadoes.csv", header = TRUE,sep = ',')
"Convert data to date-time format"
allData$date_time <- as.POSIXct(paste(allData$date, allData$time), format = "%Y-%m-%d %H:%M:%S" )
"get some other string info for data"
allData$day_string <- weekdays(allData$date_time)
allData$hour <-lubridate::hour(allData$date_time)
allData$month_abb <- month.abb[allData$mo]
saveRDS(allData, file = "tornadoes.rds")
"read in data with the below call"
my_data <- readRDS("tornadoes.rds")
runApp()
runApp()
runApp()
runApp()
runApp()
time()
timestamp()
##------ Thu Apr 05 23:25:29 2018 ------##
date(allData$date_time)
time(allData$date_time)
timetaken(allData$date_time)
date(allData$date_time)
hout(allData$date_time)
hour(allData$date_time)
time(allData$date_time)
allData[ order(allData$time , decreasing = TRUE ),]
allData[ order(allData$time , decreasing = FALSE ),]
strptime(allData$date_time, "%Y-%m-%d %I:%M:%S %p")
strptime(allData$time, "%Y-%m-%d %I:%M:%S %p")
strptime(allData$time, "%I:%M:%S")
format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')
allData[ order(allData$time_12hr , decreasing = FALSE ),]
allData$time_12hr <- format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')
alldata$time_24hr <- allData$time
allData$time_12hr <- format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')
allData$time_24hr <- allData$time
allData[ order(allData$time_12hr , decreasing = FALSE ),]
allData[ order(allData$time_24hr , decreasing = FALSE ),]
require(datasets)
"read in the data"
allData<- read.table(file = "1950-2016_all_tornadoes.csv", header = TRUE,sep = ',')
"Convert data to date-time format"
allData$date_time <- as.POSIXct(paste(allData$date, allData$time), format = "%Y-%m-%d %H:%M:%S" )
"get some other string info for data"
allData$day_string <- weekdays(allData$date_time)
allData$hour <-lubridate::hour(allData$date_time)
allData$month_abb <- month.abb[allData$mo]
allData$date <- date(allData$date_time)
allData$time_12hr <- format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')
allData$time_24hr <- allData$time
"!!!!!If any other vairables are needed for the structure add the lines here and create a new version of the .rds file!!!!!"
"create the rdata file"
saveRDS(allData, file = "tornadoes.rds")
"read in data with the below call"
my_data <- readRDS("tornadoes.rds")
"how to sort by time!"
"allData[ order(allData$time , decreasing = FALSE ),]"
"Convert from 24 hr to military"
"format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')"
temp <- group_by(year, magnitude)
temp <- group_by(allData, year, magnitude)
temp <- group_by(allData, yr, mag)
View(temp)
View(temp)
temp <- group_by(allData, yr, mag) %>% select(yr, mag)
temp <- group_by(allData, yr) %>% select(yr)
temp <- group_by(allData, yr) %>% select(yr, mag)
temp <- group_by(allData, yr) %>% select( mag)
temp <- group_by(allData, yr) %>% select(mag)
temp <- group_by(allData, yr) %>% select(mag) %>% summerize(mag = n())
temp <- group_by(allData, yr) %>% select(mag) %>% summarise(mag = n())
temp <- group_by(allData, yr, mag) %>% summarise(mag = n())
temp <- group_by(allData, yr) %>% select(mag) %>% summarise(mag = n())
temp <- group_by(allData, yr, mag) %>% select(mag) %>% summarise(mag = n())
temp <- group_by(allData, yr, mag) %>% select(yr) %>% summarise(mag = n())
temp <- group_by(allData, yr, mag) %>% select(yr)
temp <- group_by(allData, yr, mag)
temp <- group_by(allData, yr, mag) %>% select(yr, mag)
temp <- group_by(allData, yr, mag) %>% select(yr, mag) %>% summarise(mag = n())
temp <- group_by(allData, yr, mag) %>% summarise(mag = n())
temp <- group_by(allData, yr, mag) %>% summarise(count = n())
valueBox()
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% fill(0)
library(tidyverse)
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% fill(0)
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag) %>% fill(0)
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag) %>% fill(0)
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag)
temp2 <- temp %>% complete(yr, mag) %>% group_by(mag) %>% fill(0)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr, mag) %>% fill(0)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr) %>% fill(mag)
View(temp2)
View(temp2)
addData$mag <- factor(allData$mag, levels = c(-9, 0, 1, 2, 3, 4, 5))
allData<- read.table(file = "1950-2016_all_tornadoes.csv", header = TRUE,sep = ',')
"Convert data to date-time format"
allData$date_time <- as.POSIXct(paste(allData$date, allData$time), format = "%Y-%m-%d %H:%M:%S" )
"get some other string info for data"
allData$day_string <- weekdays(allData$date_time)
allData$hour <-lubridate::hour(allData$date_time)
allData$month_abb <- month.abb[allData$mo]
allData$date <- date(allData$date_time)
allData$time_12hr <- format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')
allData$time_24hr <- allData$time
addData$mag <- factor(allData$mag, levels = c(-9, 0, 1, 2, 3, 4, 5))
allData$mag <- factor(allData$mag, levels = c(-9, 0, 1, 2, 3, 4, 5))
"read in the data"
allData<- read.table(file = "1950-2016_all_tornadoes.csv", header = TRUE,sep = ',')
"Convert data to date-time format"
allData$date_time <- as.POSIXct(paste(allData$date, allData$time), format = "%Y-%m-%d %H:%M:%S" )
"get some other string info for data"
allData$day_string <- weekdays(allData$date_time)
allData$hour <-lubridate::hour(allData$date_time)
allData$month_abb <- month.abb[allData$mo]
allData$date <- date(allData$date_time)
allData$time_12hr <- format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')
allData$time_24hr <- allData$time
allData$mag <- factor(allData$mag, levels = c(-9, 0, 1, 2, 3, 4, 5))
"!!!!!If any other vairables are needed for the structure add the lines here and create a new version of the .rds file!!!!!"
"create the rdata file"
saveRDS(allData, file = "tornadoes.rds")
"read in data with the below call"
my_data <- readRDS("tornadoes.rds")
"how to sort by time!"
"allData[ order(allData$time , decreasing = FALSE ),]"
"Convert from 24 hr to military"
"format(strptime(allData$time, format='%H:%M:%S'), '%I:%M:%S %p')"
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr) %>% fill(mag)
View(temp2)
View(temp2)
View(temp)
View(temp)
allData <- readRDS("tornadoes.rds")
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr) %>% fill(mag)
View(temp2)
View(temp2)
df <- data.frame(x = c(NA, "a.b", "a.d", "b.c"))
View(df)
View(df)
df %>% separate(x, c("A", "B"))
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr) %>% fill(mag)
View(temp2)
View(temp2)
library(reshape)
install.packages("reshape")
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr) %>% fill(mag)
View(temp2)
View(temp2)
cast(temp2, yr ~ mag)
library(reshape)
cast(temp2, yr ~ mag)
View(temp2)
View(temp2)
cast(temp2, yr ~ count)
cast(temp2, yr ~ mag)
cast(temp2, mag ~ yr)
cast(temp2, yr ~ mag)
cast(temp2, yr ~ mag)
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr) %>% fill(mag, count)
View(temp2)
View(temp2)
allData[is.na(allData)] <- 0
temp2[is.na(temp2)] <- 0
View(temp2)
View(temp2)
cast(temp2, yr ~ mag)
allData <- readRDS("tornadoes.rds")
temp <- group_by(allData, yr, mag) %>% summarise(count = n()) %>% group_by(mag)
temp2 <- temp %>% complete(yr, mag) %>% group_by(yr) %>% fill(mag)
"fill 0's in to dataset"
temp2[is.na(temp2)] <- 0
View(temp)
View(temp2)
cast(temp2, yr ~ mag)
cast(temp2, yr ~ count)
cast(temp2, yr ~ mag)
